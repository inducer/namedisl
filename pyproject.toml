[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "namedisl"
version = "2025.1"
description = ''
readme = "README.rst"
requires-python = ">=3.10"
license = "MIT"
# keywords = []
authors = [
  { name = "Andreas Kloeckner", email = "inform@tiker.net" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
]
dependencies = [
    "constantdict",
    "islpy",
    "typing-extensions>=4.5",
]

[project.urls]
Documentation = "https://documen.tician.de/namedisl/"
Homepage = "https://github.com/inducer/namedisl/"

[tool.ruff]
preview = true

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes
    "G",   # flake8-logging-format
    "I",   # flake8-isort
    "N",   # pep8-naming
    "NPY", # numpy
    "Q",   # flake8-quotes
    "UP",  # pyupgrade
    "RUF", # ruff
    "W",   # pycodestyle
    "TC",
    "SIM",
]
extend-ignore = [
    "C90",  # McCabe complexity
    "E221", # multiple spaces before operator
    "E226", # missing whitespace around arithmetic operator
    "E402", # module-level import not at top of file
    "UP031", # use f-strings instead of %
    "UP032", # use f-strings instead of .format
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.isort]
combine-as-imports = true
known-local-folder = [
    "namedisl",
]
known-first-party = ["islpy"]
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]


[tool.typos.default]
extend-ignore-re = [
  "(?Rm)^.*(#|//)\\s*spellchecker:\\s*disable-line$"
]


[tool.basedpyright]
reportImplicitStringConcatenation = "none"
reportUnnecessaryIsInstance = "none"
reportUnusedCallResult = "none"
reportExplicitAny = "none"
reportPrivateUsage = "none"
reportPrivateImportUsage = "none"

reportUnreachable = "hint"
reportUnnecessaryComparison = "hint"

# This reports even cycles that are qualified by 'if TYPE_CHECKING'. Not what
# we care about at this moment.
# https://github.com/microsoft/pyright/issues/746
reportImportCycles = "none"

pythonVersion = "3.10"
pythonPlatform = "All"

exclude = [
    "proto-tests/*.py",
    "contrib/mem-pattern-explorer/*.py",
    "loopy/ipython_ext.py",
    "loopy/frontend/fortran/*.py",
    "doc",
    ".conda-root",
    ".env",
]

